function [p,range] = Linear_solver(data)
F1 = @(p)arrayfun(@(n)...
    norm(cross(data(size(data,1),:)-[p(1),p(2),p(3)]...
    ,[p(4),p(5),p(6)]))/norm([p(4),p(5),p(6)]),...
    [1:size(data,1)]);
data_len = size(data,1);
data_n = norm(data(data_len,:)-data(1,:));
p= lsqnonlin(F1,[data(1,1),data(1,2),data(1,3) ...
    (data(data_len,1)-data(1,1))/data_n ...
    (data(data_len,2)-data(1,2))/data_n ...
    (data(data_len,3)-data(1,3))/data_n]);
range = data_n;
return

